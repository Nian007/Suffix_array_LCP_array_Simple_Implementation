#include<bits/stdc++.h>
using namespace std;
int MAXN=1<<20;
string S;
int N,gap;
int sa[MAXN],pos[MAXN],tmp[MAXN];
bool comp(int i,int j)
{
    if(pos[i]!=pos[j])
    return pos[i]<pos[j];
    i+=gap;
    j+=gap;
    return (i<N&&j<N)?pos[i]<pos[j]:i>j;
}
void buildSA()
{
    N=S.size();
    for(int i=0;i<N;i++)
    {
        sa[i]=i;
        pos[i]=S[i];
    }
    for(gap=1;;gap*=2)
    {
        sort(sa,sa+N,comp);
        for(int i=0;i<N-1;i++)
        temp[i+1]=temp[i]+comp(sa[i],sa[i+1]);
        for(int i=0;i<N;i++)
        pos[sa[i]]=tmp[i];
        if(temp[N-1]==N-1)
        break;
    }
}
vector<int>Kasai(string txt,int *suffixarray)
{
    int n=N;
    vector<int>LCP(n,0);
    vector<int>invSuff(n,0);
    for(int i=0;i<n;i++)
    invSuff[suffixarray[i]]=i;
    int k=0;
    for(int i=0;i<n;i++)
    {
       if(invSuff[i]==n-1)
       k=0,continue;
       int j=suffixarray[invSuff[i]+1];
       while(i+k<n&&j+k<n&&txt[i+k]==txt[j+k])
       k++;
       LCP[invSuff[i]]=k;
       if(k>0)
       k--;
    }
    return LCP;
}
int main()
{
    cin>>S;
    buildSA();
    for(int i=0;i<N;i++)
    cout<<sa[i]<<" ";
    cout<<"\n";
    vector<int>LCP=Kasai(S,sa);
    
}